FROM nvcr.io/nvidia/l4t-jetpack:r36.4.0

ENV UV_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple
ENV UV_EXTRA_INDEX_URL=https://mirrors.aliyun.com/pypi/simple
ENV UV_HTTP_TIMEOUT=300
ENV UV_HTTP_RETRIES=8
ENV UV_HTTP_CONCURRENCY=4

RUN set -eux; \
    mkdir -p /tmp && chmod 1777 /tmp; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
        python3.10 python3-venv ca-certificates gnupg rustc cargo \
        espeak-ng espeak-ng-data git libsndfile1 curl ffmpeg g++; \
    rm -rf /var/lib/apt/lists/*


# 国内网络偶发时，cargo 走 CLI 更稳
ENV CARGO_NET_GIT_FETCH_WITH_CLI=true

RUN apt-get update -y &&  \
    apt-get install -y python3.10 python3-venv espeak-ng espeak-ng-data git libsndfile1 curl ffmpeg g++ &&  \
    apt-get clean && rm -rf /var/lib/apt/lists/* && \
    mkdir -p /usr/share/espeak-ng-data &&  \
    ln -s /usr/lib/*/espeak-ng-data/* /usr/share/espeak-ng-data/ && \
    curl -LsSf https://astral.sh/uv/install.sh -o install.sh && \
    sed -i 's#https://github.com#https://gh-proxy.com/https://github.com#g' install.sh &&\
    sh install.sh && \
    mv /root/.local/bin/uv /usr/local/bin/ && \
    mv /root/.local/bin/uvx /usr/local/bin/ && \
    useradd -m -u 1001 appuser && \
    mkdir -p /app/api/src/models/v1_0 && \
    chown -R appuser:appuser /app

USER appuser
WORKDIR /app

COPY --chown=appuser:appuser pyproject.toml ./pyproject.toml

# 如果采用 pyproject 里配置镜像 URL（方案A），这两行就够
RUN uv venv --python 3.10 && uv sync --extra l4t --no-cache

# 如果采用 Dockerfile 兜底（方案B），在这里加上前面那段“兜底手动装 wheel”

COPY --chown=appuser:appuser api ./api
COPY --chown=appuser:appuser web ./web
COPY --chown=appuser:appuser docker/scripts/ ./
RUN chmod +x ./entrypoint.sh

ENV PATH="/app/.venv/bin:$PATH" \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app:/app/api \
    UV_LINK_MODE=copy \
    USE_GPU=true \
    PHONEMIZER_ESPEAK_PATH=/usr/bin \
    PHONEMIZER_ESPEAK_DATA=/usr/share/espeak-ng-data \
    ESPEAK_DATA_PATH=/usr/share/espeak-ng-data \
    DEVICE="gpu" \
    DOWNLOAD_MODEL=true

RUN if [ "$DOWNLOAD_MODEL" = "true" ]; then \
      python download_model.py --output api/src/models/v1_0; \
    fi

CMD ["./entrypoint.sh"]